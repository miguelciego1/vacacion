<?php

namespace AdminVacacionBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\AdvancedUserInterface;
use Symfony\Component\Security\Core\User\EquatableInterface;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * @ORM\Table(name="vac_adm_usuario")
 * @ORM\Entity(repositoryClass="AdminVacacionBundle\Repository\UsuarioRepository")
 * @UniqueEntity(fields={"empleado"}, message="Este EMPLEADO ya existe...")
 * @UniqueEntity(fields="login", message="Este LOGIN esta repetido...")
 * @ORM\HasLifecycleCallbacks()
 */
class Usuario implements AdvancedUserInterface, EquatableInterface,  \Serializable {

    
// INICIO Metodos requerido por la interfaz UserInterface ====================================

    public function getUsername(){
        return $this->login;
    }

    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $usuario){
        return $this->getUsername() == $usuario->getUsername();
    }

    public function eraseCredentials(){
    }

    public function getRoles(){
        
        return explode('-', $this->role);
    }

    public function getSalt(){
        return false;
    }

    public function getPassword(){
        return $this->password;
    }

// Metodos requerido cuando la entidad USUARIO se relaciona con Cargo o Rol ==================

    public function serialize(){
       return serialize($this->id);
    }

    public function unserialize($data){
        $this->id = unserialize($data);
    }

    public function isAccountNonExpired()
    {
        return true;
    }

    public function isAccountNonLocked()
    {
        return true;
    }

    public function isCredentialsNonExpired()
    {
        return true;
    }

    public function isEnabled()
    {
        return $this->activo;
    }

// FIN Metodos requerido por la interfaz UserInterface =======================================

    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

   /**
    * @ORM\Column(type="string", length=8, unique=true)
    * @Assert\NotBlank(message="El LOGIN no debe estar vacio...")
    * @Assert\Length(min=4, max=8)
    */
    private $login;

   /**
    * @ORM\Column(type="string", length=255, nullable=false)
    * @Assert\Length(min=5)
    */
    private $password;

    /**
    * @ORM\Column(type="string", length=30, unique=false,nullable=true)
    */
    private $role;

    /**
    * @ORM\Column(type="boolean", unique=false)
    */
    private $activo;

    /**
     * @ORM\Column(name="creadoEl", type="datetime")
     */
    private $creadoEl;

	/**
	 * One Product has Many Features.
	 * @ORM\OneToMany(targetEntity="AdminVacacionBundle\Entity\VacacionMod", mappedBy="usuario")
	 */
	private $vacacionMod;


// === Foraneas ======================================================== //

   /**
    * @ORM\OneToOne(targetEntity="Cps\Personal\ArchivoBundle\Entity\Empleado")
    * @ORM\JoinColumn(name="empleado_id", referencedColumnName="id",unique=true,nullable=false)
    * @Assert\NotBlank(message="El campo EMPLEADO no debe estar vacio...")
    */
   protected $empleado;

// === Funciones Auxiliares ============================================ //

    public function setId($id){
        $this->id = $id;

        return $this;
    }

    public function __toString(){
        return $this->login;
    }

// === Retrollamadas =================================================== //

    /**
     * @ORM\PrePersist
     */
   public function PrePersist(){
      $this->login    = strtolower($this->login);
      $this->activo = false;
      $this->creadoEl = new \DateTime();
   }

    /**
     * @ORM\PreUpdate
     */
   public function PreUpdate(){
      $this->login    = strtolower($this->login);
   }

// === Gets y Sets ===================================================== //

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set login
     *
     * @param string $login
     * @return Usuario
     */
    public function setLogin($login)
    {
        $this->login = $login;

        return $this;
    }

    /**
     * Get login
     *
     * @return string
     */
    public function getLogin()
    {
        return $this->login;
    }

    /**
     * Set password
     *
     * @param string $password
     * @return Usuario
     */
    public function setPassword($password)
    {
        $this->password = $password;

        return $this;
    }


    /**
     * Set creadoEl
     *
     * @param \DateTime $creadoEl
     * @return Usuario
     */
    public function setCreadoEl($creadoEl)
    {
        $this->creadoEl = $creadoEl;

        return $this;
    }

    /**
     * Get creadoEl
     *
     * @return \DateTime
     */
    public function getCreadoEl()
    {
        return $this->creadoEl;
    }

    /**
     * Set empleado
     *
     * @param \Cps\Personal\ArchivoBundle\Entity\Empleado $empleado
     * @return Usuario
     */
    public function setEmpleado(\Cps\Personal\ArchivoBundle\Entity\Empleado $empleado)
    {
        $this->empleado = $empleado;

        return $this;
    }

    /**
     * Get empleado
     *
     * @return \Cps\Personal\ArchivoBundle\Entity\Empleado
     */
    public function getEmpleado()
    {
        return $this->empleado;
    }

    /**
     * Set role
     *
     * @param string $role
     * @return Usuario
     */
    public function setRole($role)
    {
        $this->role = $role;
    
        return $this;
    }

    /**
     * Get role
     *
     * @return string 
     */
    public function getRole()
    {
        return $this->role;
    }

    /**
     * Set activo
     *
     * @param boolean $activo
     * @return Usuario
     */
    public function setActivo($activo)
    {
        $this->activo = $activo;
    
        return $this;
    }

    /**
     * Get activo
     *
     * @return boolean 
     */
    public function getActivo()
    {
        return $this->activo;
    }
}
