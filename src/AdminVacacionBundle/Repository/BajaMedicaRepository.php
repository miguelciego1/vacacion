<?php

namespace AdminVacacionBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * VacacionCabeceraRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BajaMedicaRepository extends EntityRepository
{
    public function findByFechas($fecIni,$fecFin,$empleadoId){
        $em=$this->getEntityManager();
        if(is_null($empleadoId)){

                return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                WHERE v.desdeEl BETWEEN :fecIni AND :fecFin
                OR v.hastaEl BETWEEN :fecIni AND :fecFin
                ORDER BY v.id ASC')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('fecFin',$fecFin)
                ->getResult();
        }
        else{
            return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                WHERE (v.desdeEl BETWEEN :fecIni AND :fecFin
                OR v.hastaEl BETWEEN :fecIni AND :fecFin)
                AND v.empleado=:empleado
                ORDER BY v.id ASC')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('fecFin',$fecFin)
                ->setParameter('empleado',$empleadoId)
                ->getResult();
        }
    }
    public function findByFechasRegistro($fecIni,$fecFin){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                WHERE v.creadoEl BETWEEN :fecIni AND :fecFin
                ORDER BY v.id ASC')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('fecFin',$fecFin)
                ->getResult();
        
    }

    public function findByCorrelativo($fecIni,$fecFin){
        $em=$this->getEntityManager();
            return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                WHERE v.id BETWEEN :fecIni AND :fecFin
                ORDER BY v.id ASC')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('fecFin',$fecFin)
                ->getResult();
        
    }

   
    public function findUltimoBajaMaternidadEmpleado($empleadoId,$fecha,$opcion){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                where v.empleado=:empleado
                AND v.hastaEl>=:fecha
                AND v.id !=:opcion
                and v.tipo=:tipo
                ORDER BY v.hastaEl DESC')
                ->setParameter('empleado',$empleadoId)
                ->setParameter('fecha',$fecha)
                ->setParameter('tipo','M')
                ->setParameter('opcion',$opcion)
                ->setMaxResults(1)
                ->getOneOrNullResult();
        

    }

    public function findBajaProcesadaMes($empleadoId,$id){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                where v.empleado=:empleado
                and month(v.proHastaEl)>=month(now())
                and v.id!=:id
                ORDER BY v.proHastaEl DESC')
                ->setParameter('empleado',$empleadoId)
                ->setParameter('id',$id)
                ->setMaxResults(1)
                ->getOneOrNullResult();
        

    }
    public function findBajaProcesadaMesSiguiente($empleadoId,$id){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                where v.empleado=:empleado
                and month(v.proHastaEl)>=month(now())+1
                and v.id!=:id
                ORDER BY v.proHastaEl DESC')
                ->setParameter('empleado',$empleadoId)
                ->setParameter('id',$id)
                ->setMaxResults(1)
                ->getOneOrNullResult();
                

    }

    public function traerSobrePosicion($baja)
    {
        $em=$this->getEntityManager();

        return $em->createQuery(
            'SELECT v
            FROM AdminVacacionBundle:BajaMedica v
            WHERE ((v.desdeEl between :ini and :fin)
            OR (v.hastaEl between :ini and :fin)
            OR (:ini between v.desdeEl and v.hastaEl)
            OR(:fin between v.desdeEl and v.hastaEl))
            and (v.empleado=:empleado)
            ')->setParameter('ini',$baja->getDesdeEl())
        ->setParameter('fin',$baja->getHastaEl())
        ->setParameter('empleado',$baja->getEmpleado()->getId())
        ->setMaxResults(1)
        ->getOneOrNullResult();
    }


    /// PROCESAR BAJAS Y PARA ACTUALIZAR

    public function traerEmpleadosParaProceso($fecIni){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT DISTINCT e.id
                FROM AdminVacacionBundle:BajaMedica v join v.empleado e
                WHERE v.proDesdeEl > :fecIni')
                ->setParameter('fecIni',$fecIni)
                ->getArrayResult();
    }
    public function traerBajasMedicasEmpleado($fecIni,$empleado){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                WHERE v.proDesdeEl > :fecIni
                and v.empleado=:empleado
                ORDER BY v.desdeEl ASC')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('empleado',$empleado)
                ->getResult();
    }


    public function traerBajaAux($fecIni,$empleado)
    {
        $em=$this->getEntityManager();

        return $em->createQuery(
            'SELECT v
            FROM AdminVacacionBundle:BajaMedica v
            WHERE v.proDesdeEl <=:fec and v.proHastaEl >:fec
            and v.empleado=:empleado
            ')->setParameter('fec',$fecIni)
        ->setParameter('empleado',$empleado)
        ->setMaxResults(1)
        ->getOneOrNullResult();
    }



    //generar planilla /////////////////////

    public function traerEmpleadosParaPlanilla($fecIni,$fecFin){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT DISTINCT e.id,e.nombre,e.paterno,e.materno,e.fchnac
                FROM AdminVacacionBundle:BajaMedica v join v.empleado e
                WHERE (v.proDesdeEl BETWEEN :fecIni AND :fecFin
                OR v.proHastaEl BETWEEN :fecIni AND :fecFin
                OR (v.proDesdeEl < :fecIni AND v.proHastaEl > :fecFin))')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('fecFin',$fecFin)
                ->getArrayResult();
    }

    public function traerBajasParaPlanilla($fecIni,$fecFin){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v 
                WHERE (v.proDesdeEl BETWEEN :fecIni AND :fecFin
                OR v.proHastaEl BETWEEN :fecIni AND :fecFin
                OR (v.proDesdeEl < :fecIni AND v.proHastaEl > :fecFin))
                and v.estado!=:estado')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('fecFin',$fecFin)
                ->setParameter('estado','P')
                ->getResult();
    }

    public function traerBajasMedicasEmpleadoPlanilla($fecIni,$fecFin,$empleado){
        $em=$this->getEntityManager();
        return $em->createQuery('
                SELECT v
                FROM AdminVacacionBundle:BajaMedica v
                WHERE (v.proDesdeEl BETWEEN :fecIni AND :fecFin
                OR v.proHastaEl BETWEEN :fecIni AND :fecFin
                OR (v.proDesdeEl < :fecIni AND v.proHastaEl > :fecFin))
                AND v.empleado =:empleado
                and v.estado!=:estado
                order by v.proDesdeEl ASC')
                ->setParameter('fecIni',$fecIni)
                ->setParameter('fecFin',$fecFin)
                ->setParameter('empleado',$empleado)
                ->setParameter('estado','P')
                ->getResult();
    }


}
